{"version":3,"sources":["components/Navigation.js","components/SimpleCard.js","components/ProCard.js","components/DoughnutCard.js","components/BarCard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","class","className","style","href","React","Component","SimpleCard","param","icon","faFileAlt","faBuilding","faDesktop","this","props","header","renderSwitch","number","ProCard","faCircle","cardType","DoughnutCard","data","labels","datasets","label","backgroundColor","borderColor","width","height","options","maintainAspectRatio","legend","display","reverse","title","BarCard","scales","xAxes","yAxes","Footer","faPhoneSquare","target","faPhoneVolume","faEnvelope","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uQA6BeA,G,6LAtBP,OACI,yBAAKC,MAAM,uCACNC,UAAU,mBACVC,MAAO,CACH,mBAAoB,gBACpB,MAAS,qBAGd,yBAAKF,MAAM,aACP,uBAAGC,UAAU,eACVE,KAAK,IACLD,MAAO,CACH,MAAS,qBAHhB,6F,GAZKE,IAAMC,Y,8BCyChBC,E,qLA5BEC,GACT,OAAOA,GACH,IAAK,YACD,OAAO,kBAAC,IAAD,CAAiBC,KAAMC,IAAWR,UAAU,yBACvD,IAAK,aACD,OAAO,kBAAC,IAAD,CAAiBO,KAAME,IAAYT,UAAU,6BACxD,IAAK,YACD,OAAO,kBAAC,IAAD,CAAiBO,KAAMG,IAAWV,UAAU,8BACvD,QACI,OAAO,Q,+BAKf,OACI,yBAAKD,MAAM,OAAOC,UAAU,cACxB,yBAAKD,MAAM,eACP,wBAAIC,UAAU,qBAAqBW,KAAKC,MAAMC,SAElD,yBAAKd,MAAM,aACLY,KAAKG,aAAaH,KAAKC,MAAML,MAC/B,4BAAKI,KAAKC,MAAMG,c,GA5BXZ,IAAMC,WCsEhBY,G,2LArEEV,GACT,OAAOA,GACH,IAAK,aACD,OACI,yBAAKP,MAAM,OACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,0CACP,yBAAKA,MAAM,wCAAuC,kBAAC,IAAD,CAAiBQ,KAAMU,IAAUjB,UAAU,gCAC7F,yBAAKD,MAAM,uCAAsC,2BAAOA,MAAM,kBAAb,SAC/C,4DAEV,yBAAKA,MAAM,OACP,yBAAKA,MAAM,0CACP,yBAAKA,MAAM,wCAAuC,kBAAC,IAAD,CAAiBQ,KAAMU,IAAUjB,UAAU,+BAC7F,yBAAKD,MAAM,uCAAsC,2BAAOA,MAAM,kBAAb,SAErD,yDAEJ,yBAAKA,MAAM,OACP,yBAAKA,MAAM,0CACP,yBAAKA,MAAM,wCAAuC,kBAAC,IAAD,CAAiBQ,KAAMU,IAAUjB,UAAU,8BAC7F,yBAAKD,MAAM,uCAAsC,2BAAOA,MAAM,kBAAb,QAErD,sDAIhB,IAAK,cACD,OACI,yBAAKA,MAAM,OACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,0CACP,yBAAKA,MAAM,wCAAuC,kBAAC,IAAD,CAAiBQ,KAAMU,IAAUjB,UAAU,8BAC7F,yBAAKD,MAAM,uCAAsC,2BAAOA,MAAM,kBAAb,SAErD,2DAEJ,yBAAKA,MAAM,OACP,yBAAKA,MAAM,0CACP,yBAAKA,MAAM,wCAAuC,kBAAC,IAAD,CAAiBQ,KAAMU,IAAUjB,UAAU,8BAC7F,yBAAKD,MAAM,uCAAsC,2BAAOA,MAAM,kBAAb,SAErD,4DAIhB,QACI,OAAO,Q,+BAKf,OACI,yBAAKA,MAAM,OAAOC,UAAU,WACxB,yBAAKD,MAAM,eACP,wBAAIC,UAAU,kBAAkBW,KAAKC,MAAMC,SAE/C,yBAAKd,MAAM,yBACP,wBAAIA,MAAM,0BAA0BY,KAAKC,MAAMG,QAC/C,wBAAIhB,MAAM,6CAAV,mCAEJ,yBAAKA,MAAM,eACLY,KAAKG,aAAaH,KAAKC,MAAMM,gB,GAjE7Bf,IAAMC,Y,QCwCbe,G,wLAzCP,OACI,yBAAKpB,MAAM,OAAOC,UAAU,gBACxB,yBAAKD,MAAM,eACP,wBAAIC,UAAU,uBAAuBW,KAAKC,MAAMC,SAEpD,yBAAKd,MAAM,aACP,kBAAC,IAAD,CACIqB,KAAM,CACFC,OAAQ,CAAC,iBAAW,2BACpBC,SAAU,CAAC,CACPC,MAAO,UACPC,gBAAiB,CAAC,UAAU,WAC5BC,YAAa,CAAC,gBAAgB,iBAC9BL,KAAM,CAAC,OAAQ,UAIvBM,MAAO,IACPC,OAAQ,IACRC,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,EACTC,SAAS,GAEbC,MAAO,IAEXjC,UAAU,4B,GA9BPG,IAAMC,YCyClB8B,G,wLAtCP,OACI,yBAAKnC,MAAM,OAAOC,UAAU,WACxB,yBAAKD,MAAM,eACP,wBAAIC,UAAU,kBAAkBW,KAAKC,MAAMC,SAE/C,yBAAKd,MAAM,aACP,kBAAC,IAAD,CACIqB,KAAM,CACFC,OAAQ,CAAC,UAAU,WAAW,SAC9BC,SAAU,CAAC,CACPC,MAAO,0BACPC,gBAAiB,UACjBC,YAAa,UACbL,KAAM,CAAC,MAAM,MAAM,UAI3BM,MAAO,IACPC,OAAQ,IACRC,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbE,MAAO,GACPE,OAAQ,CACJC,MAAO,CAAC,CAAC,UAAY,CAAC,YAAa,EAAK,WAAY,EAAM,iBAAkB,KAC5EC,MAAO,CAAC,CAAC,UAAY,CAAC,YAAa,EAAK,WAAY,EAAM,iBAAkB,OAGpFrC,UAAU,uB,GAjCZG,IAAMC,YC6BbkC,G,wLAtBP,OACI,yBAAKtC,UAAU,eACX,gCACI,yBAAKD,MAAM,aACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,cACP,+CACA,wBAAIA,MAAM,aACN,4BAAI,kBAAC,IAAD,CAAiBQ,KAAMgC,MAAiB,uBAAGC,OAAO,UAAV,2GAC5C,4BAAI,kBAAC,IAAD,CAAiBjC,KAAMkC,MAAiB,8HAC5C,4BAAI,kBAAC,IAAD,CAAiBlC,KAAMmC,MAAc,yEAIrD,uBAAG3C,MAAM,aAAT,wG,GAjBHI,IAAMC,YC2DZuC,E,iLAtDX,OACE,yBAAK3C,UAAU,OAEX,kBAAC,EAAD,MAEA,6BACE,yBAAKD,MAAM,uBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,YACP,kBAAC,EAAD,CAAYc,OAAO,yBAAeE,OAAO,OAAOR,KAAK,eAEzD,yBAAKR,MAAM,YACP,kBAAC,EAAD,CAAYc,OAAO,mBAAWE,OAAO,KAAKR,KAAK,gBAEnD,yBAAKR,MAAM,YACP,kBAAC,EAAD,CAAYc,OAAO,2BAAiBE,OAAO,KAAKR,KAAK,kBAMnE,6BACE,yBAAKR,MAAM,kBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,YACP,kBAAC,EAAD,CAASc,OAAO,mCAAqBE,OAAO,QAAQG,SAAS,gBAEjE,yBAAKnB,MAAM,YACP,kBAAC,EAAD,CAASc,OAAO,0BAAgBE,OAAO,OAAOG,SAAS,oBAMrE,6BACE,yBAAKnB,MAAM,kBACT,yBAAKA,MAAM,OACP,yBAAKA,MAAM,YACP,kBAAC,EAAD,CAAcc,OAAO,0CAEzB,yBAAKd,MAAM,YACP,kBAAC,EAAD,CAASc,OAAO,6CAM5B,kBAAC,EAAD,W,GAlDQV,IAAMC,WCEJwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0ac299ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Navigation-Clean.css';\r\n//import '../styles/navigation.css';\r\n\r\nclass Navigation extends React.Component {  \r\n\r\n    render() {\r\n        return (\r\n            <nav class=\"navbar navbar-light navbar-expand-md\" \r\n                 className=\"navigation-clean\"\r\n                 style={{\r\n                     \"background-color\": \"rgb(31,30,46)\",\r\n                     \"color\": \"rgb(231,231,241)\"\r\n                 }}\r\n            >\r\n                <div class=\"container\">\r\n                    <a className=\"navbar-brand\"\r\n                       href=\"#\"\r\n                       style={{\r\n                           \"color\": \"rgb(134,136,151)\"\r\n                       }}\r\n                    >\r\n                        Trung tâm Phục vụ hành chính công tỉnh Sóc Trăng</a>                    \r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport \"../styles/simplecard.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//import which icons to be used \nimport { faFileAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faBuilding } from '@fortawesome/free-regular-svg-icons';\nimport { faDesktop } from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    //conditional render\n    renderSwitch(param) {\n        switch(param) {\n            case 'faFileAlt':\n                return <FontAwesomeIcon icon={faFileAlt} className=\"simplecard_body_icon\" />;\n            case 'faBuilding':\n                return <FontAwesomeIcon icon={faBuilding} className=\"simplecard_body_icon_sbn\" />;\n            case 'faDesktop':\n                return <FontAwesomeIcon icon={faDesktop} className=\"simplecard_body_icon_quay\" />;\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <div class=\"card\" className=\"simplecard\">\n                <div class=\"card-header\">\n                    <h4 className=\"simplecard_header\">{this.props.header}</h4>\n                </div>\n                <div class=\"card-body\">\n                    { this.renderSwitch(this.props.icon) }\n                    <h2>{this.props.number}</h2>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SimpleCard;","import React from 'react';\nimport \"../styles/procard.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//import which icons to be used \nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass ProCard extends React.Component {\n\n    //conditional render; dynamically rendering the Card Footer only\n    renderSwitch(param) {\n        switch(param) {\n            case 'tinhhinhxl':\n                return (\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"row text-center justify-content-center\">\n                                <div class=\"col text-right align-self-center p-1\"><FontAwesomeIcon icon={faCircle} className=\"procard_body_icon_truochan\" /></div>\n                                <div class=\"col text-left align-self-center p-1\"><label class=\"col-form-label\">25%</label></div>\n                            </div><label>Trước hạn</label>\n                        </div>\n                        <div class=\"col\">\n                            <div class=\"row text-center justify-content-center\">\n                                <div class=\"col text-right align-self-center p-1\"><FontAwesomeIcon icon={faCircle} className=\"procard_body_icon_dunghan\" /></div>\n                                <div class=\"col text-left align-self-center p-1\"><label class=\"col-form-label\">95%</label></div>\n                            </div>\n                            <label>Đúng hạn</label>\n                        </div>\n                        <div class=\"col\">\n                            <div class=\"row text-center justify-content-center\">\n                                <div class=\"col text-right align-self-center p-1\"><FontAwesomeIcon icon={faCircle} className=\"procard_body_icon_trehan\" /></div>\n                                <div class=\"col text-left align-self-center p-1\"><label class=\"col-form-label\">2%</label></div>\n                            </div>\n                            <label>Trễ hạn</label>\n                        </div>\n                    </div>\n                );\n            case 'hstructuyen':\n                return (\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"row text-center justify-content-center\">\n                                <div class=\"col text-right align-self-center p-1\"><FontAwesomeIcon icon={faCircle} className=\"procard_body_icon_mucdo3\" /></div>\n                                <div class=\"col text-left align-self-center p-1\"><label class=\"col-form-label\">85%</label></div>\n                            </div>\n                            <label>Mức độ 3</label>\n                        </div>\n                        <div class=\"col\">\n                            <div class=\"row text-center justify-content-center\">\n                                <div class=\"col text-right align-self-center p-1\"><FontAwesomeIcon icon={faCircle} className=\"procard_body_icon_mucdo4\" /></div>\n                                <div class=\"col text-left align-self-center p-1\"><label class=\"col-form-label\">15%</label></div>\n                            </div>\n                            <label>Mức độ 4</label>\n                        </div>\n                    </div>        \n                );\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <div class=\"card\" className=\"procard\">\n                <div class=\"card-header\">\n                    <h4 className=\"procard_header\">{this.props.header}</h4>\n                </div>\n                <div class=\"card-body text-center\">\n                    <h1 class=\"text-center card-title\">{this.props.number}</h1>\n                    <h6 class=\"text-center text-muted card-subtitle mb-2\">Đã tiếp nhận</h6>\n                </div>\n                <div class=\"card-footer\">\n                    { this.renderSwitch(this.props.cardType) }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProCard;","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport '../styles/doughnutcard.css';\r\n\r\nclass DoughnutCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"card\" className=\"doughnutcard\">\r\n                <div class=\"card-header\">\r\n                    <h4 className=\"doughnutcard_header\">{this.props.header}</h4>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <Doughnut \r\n                        data={{\r\n                            labels: [\"Hài lòng\",\"Không hài lòng\"],\r\n                            datasets: [{\r\n                                label: \"Revenue\",\r\n                                backgroundColor: [\"#5FAD56\",\"#E55934\"],\r\n                                borderColor: [\"rgb(39,42,61)\",\"rgb(39,42,61)\"],\r\n                                data: [\"1007\", \"150\"], //real data\r\n                            }],\r\n                            }\r\n                        }\r\n                        width={816}\r\n                        height={408}\r\n                        options={{\r\n                            maintainAspectRatio: true,\r\n                            legend: {\r\n                                display: true,\r\n                                reverse: false\r\n                            },\r\n                            title: {}\r\n                        }}\r\n                        className=\"doughnutcard_body\"\r\n                    />\r\n\r\n                    {/* <div> */}\r\n                        {/* <canvas height=\"408\" width=\"816\" className=\"chartcard_body\"></canvas> */}\r\n\r\n                        {/* <canvas data-bs-chart=\"{style=\"display: block; height: 204px; width: 408px;\" width=\"306\" height=\"153\" ></canvas> */}\r\n                    {/* </div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DoughnutCard;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport '../styles/barcard.css';\r\n\r\nclass BarCard extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"card\" className=\"barcard\">\r\n                <div class=\"card-header\">\r\n                    <h4 className=\"barcard_header\">{this.props.header}</h4>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <Bar \r\n                        data={{\r\n                            labels: [\"January\",\"February\",\"March\"],\r\n                            datasets: [{\r\n                                label: \"HS trực tuyến\",\r\n                                backgroundColor: \"#2F97C1\",\r\n                                borderColor: \"#2F97C1\",\r\n                                data: [\"890\",\"824\",\"845\"], //real data\r\n                            }],\r\n                            }\r\n                        }\r\n                        width={816}\r\n                        height={408}\r\n                        options={{\r\n                            maintainAspectRatio: true,\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            title: {},\r\n                            scales: {\r\n                                xAxes: [{\"gridLines\":{\"drawBorder\":true,\"drawTicks\":false,\"drawOnChartArea\":false}}],\r\n                                yAxes: [{\"gridLines\":{\"drawBorder\":true,\"drawTicks\":false,\"drawOnChartArea\":false}}]\r\n                            }\r\n                        }}\r\n                        className=\"barcard_body\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarCard;","import React from 'react';\r\nimport '../styles/Footer-Dark.css';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n//import which icons to be used \r\nimport { faPhoneSquare, faPhoneVolume, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer-dark\">\r\n                <footer>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 item\">\r\n                                <h3>Liên hệ</h3>\r\n                                <ul class=\"text-left\">\r\n                                    <li><FontAwesomeIcon icon={faPhoneSquare} /><a target=\"_blank\">&nbsp;Bộ phận tiếp nhận &amp; trả kết quả:&nbsp;0299 3879789 - 0299 3889789</a></li>\r\n                                    <li><FontAwesomeIcon icon={faPhoneVolume} /><a>&nbsp;Đường dây nóng phản ánh, kiến nghị:&nbsp;0299 3899789</a></li>\r\n                                    <li><FontAwesomeIcon icon={faEnvelope} /><a>&nbsp;trungtampvhcc-soctrang@chinhphu.vn</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <p class=\"copyright\">Trung tâm Phục vụ hành chính công tỉnh Sóc Trăng © 2020</p>\r\n                    </div>\r\n                </footer>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\n\nimport Nagigation from './components/Navigation';\nimport SimpleCard from './components/SimpleCard';\nimport ProCard from './components/ProCard';\nimport DoughnutCard from './components/DoughnutCard';\nimport BarCard from './components/BarCard';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n\n          <Nagigation />\n\n          <div>{/* start First Row  */}\n            <div class=\"container mt-3 mb-3\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <SimpleCard header=\"Tổng số TTHC\" number=\"1089\" icon=\"faFileAlt\"/>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <SimpleCard header=\"Sở ngành\" number=\"17\" icon=\"faBuilding\"/>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <SimpleCard header=\"Quầy giao dịch\" number=\"23\" icon=\"faDesktop\"/>\n                    </div>\n                </div>\n            </div>\n          </div>{/* end First Row  */}\n\n          <div>{/* start Second Row  */}\n            <div class=\"container mb-3\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <ProCard header=\"Tình hình xử lý HS\" number=\"11725\" cardType=\"tinhhinhxl\" />\n                    </div>\n                    <div class=\"col-md-6\">\n                        <ProCard header=\"HS trực tuyến\" number=\"5734\" cardType=\"hstructuyen\" />\n                    </div>\n                </div>\n            </div>\n          </div>{/* end Second Row */}\n\n          <div>{/* start Third Row  */}\n            <div class=\"container mb-3\">\n              <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <DoughnutCard header=\"Mức độ hài lòng\" />\n                  </div>\n                  <div class=\"col-md-6\">\n                      <BarCard header=\"Hồ sơ trực tuyến\"/>\n                  </div>\n              </div>\n            </div>\n          </div>{/* end Third Row */}\n\n          <Footer />\n\n      </div>//end div app\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}